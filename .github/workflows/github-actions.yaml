name: Deploy App to EKS

on:
  repository_dispatch: # from frontend/backend repos
    types: [deploy-to-eks, deploy-to-eks-backend]

jobs:
  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "latest"

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_EKS_CLUSTER}}

      - name: Replace image URI in manifests frontend
        if: github.event.action == 'deploy-to-eks'
        run: |
          # Replace placeholders in Kubernetes manifests
          sed -i "s|IMAGE_VALUE|${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ github.event.client_payload.image }}:${{ github.event.client_payload.tag }}|g" k8s/frontend/shopping-deployment.yaml

      - name: Replace image URI in manifests backend
        if: github.event.action == 'deploy-to-eks-backend'
        run: |
          # Replace placeholders in Kubernetes manifests
          sed -i "s|IMAGE_VALUE|${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ github.event.client_payload.image }}:${{ github.event.client_payload.tag }}|g" k8s/backend/shopping-server-deployment.yaml
      - name: Deploy to EKS Frontend
        if: github.event.action == 'deploy-to-eks'
        run: |
          # Apply the manifests
          kubectl apply -f k8s/frontend/shopping-deployment.yaml

          # Option 2: Ingress + ClusterIP (requires AWS Load Balancer Controller)
          # kubectl apply -f k8s/service.yaml
          # kubectl apply -f k8s/ingress.yaml

      - name: Deploy to EKS Backend
        if: github.event.action == 'deploy-to-eks-backend'
        run: |
          # Apply the manifests
          kubectl apply -f k8s/backend/shopping-server-deployment.yaml

          # Option 2: Ingress + ClusterIP (requires AWS Load Balancer Controller)
          # kubectl apply -f k8s/service.yaml
          # kubectl apply -f k8s/ingress.yaml
